
#ifndef __Vector4D__
#define __Vector4D__

/******************************************************************************
 *
 *****************************************************************************/
class Vector4D
{
public:

   /***************************************************************************
    * Constructor
    **************************************************************************/
   Vector4D();

   /***************************************************************************
    * Constructor
    **************************************************************************/
   Vector4D( const double &w, const double &x, const double &y, const double &z );

   /***************************************************************************
    * Copy constructor
    **************************************************************************/
   Vector4D( const Vector4D &vec );

   /***************************************************************************
    * Destructor
    **************************************************************************/
   virtual ~Vector4D();

   /***************************************************************************
    * Returns the w component of this vector.
    **************************************************************************/
   double W() const;

   /***************************************************************************
    * Sets the w component of this vector.
    **************************************************************************/
   void setW( const double &w );

   /***************************************************************************
    * Returns the x component of this vector.
    **************************************************************************/
   double X() const;

   /***************************************************************************
    * Sets the x component of this vector.
    **************************************************************************/
   void setX( const double &x );

   /***************************************************************************
    * Returns the y component of this vector.
    **************************************************************************/
   double Y() const;

   /***************************************************************************
    * Sets the y component of this vector.
    **************************************************************************/
   void setY( const double &y );

   /***************************************************************************
    * Returns the z component of this vector.
    **************************************************************************/
   double Z() const;

   /***************************************************************************
    * Sets the z component of this vector.
    **************************************************************************/
   void setZ( const double &z );

   /***************************************************************************
    * Returns the magnitude of this vector.
    **************************************************************************/
   double magnitude() const;

   /***************************************************************************
    * Normalizes this vector. (Converts this vector to a unit vector.)
    **************************************************************************/
   void normalize();

   /***************************************************************************
    * Returns a normalized vector in the direction of this vector.
    **************************************************************************/
   Vector4D normalized() const;

   /***************************************************************************
    * Assignment operator.
    **************************************************************************/
   Vector4D &operator=( const Vector4D &vec );

   /***************************************************************************
    * Addition operator.
    **************************************************************************/
   const Vector4D operator+( const Vector4D &vec ) const;

   /***************************************************************************
    * Subtraction operator.
    **************************************************************************/
   const Vector4D operator-( const Vector4D &vec ) const;

   /***************************************************************************
    * Multiplication operator.
    **************************************************************************/
   const Vector4D operator*( const double &scale ) const;

   /***************************************************************************
    * Division operator.
    **************************************************************************/
   const Vector4D operator/( const double &divisor ) const;

   /***************************************************************************
    * Equality operator.
    **************************************************************************/
   bool operator==( const Vector4D &vec ) const;

   /***************************************************************************
    * Inequality operator.
    **************************************************************************/
   bool operator!=( const Vector4D &vec ) const;

   /***************************************************************************
    * Addition operator.
    **************************************************************************/
   Vector4D &operator+=( const Vector4D &vec );

   /***************************************************************************
    * Subtraction operator.
    **************************************************************************/
   Vector4D &operator-=( const Vector4D &vec );

   /***************************************************************************
    * Multiplication operator.
    **************************************************************************/
   Vector4D &operator*=( const double &scale );

   /***************************************************************************
    * Division operator.
    **************************************************************************/
   Vector4D &operator/=( const double &divisor );

   /***************************************************************************
    * Returns the cross product of the two supplied vectors.
    **************************************************************************/
   static Vector4D crossProduct( const Vector4D &v1, const Vector4D &v2 );

   /***************************************************************************
    * Returns the scalar dot product of the two supplied vectors.
    **************************************************************************/
   static double dotProduct( const Vector4D &v1, const Vector4D &v2 );

private:

   double w;
   double x;
   double y;
   double z;
   double mag;

   void calculateMagnitude();

};

#endif

