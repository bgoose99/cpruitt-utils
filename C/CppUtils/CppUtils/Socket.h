
#ifndef __Socket__
#define __Socket__

// system includes
#ifdef _WIN32
#else
#include <poll.h>
#endif

#include <string>

/******************************************************************************
 * Abstract socket class.
 *****************************************************************************/
class Socket
{
   public:
      
      /************************************************************************
       * 
       ***********************************************************************/
      Socket( const std::string &ipAddress, const int &port, const bool &blocking = false );
      
      /************************************************************************
       * 
       ***********************************************************************/
      virtual ~Socket();
      
      /************************************************************************
       * 
       ***********************************************************************/
      bool connect();
      
      /************************************************************************
       * 
       ***********************************************************************/
      void disconnect();
      
      /************************************************************************
       * 
       ***********************************************************************/
      virtual int send( const char *msg, const int &size );
      
      /************************************************************************
       * 
       ***********************************************************************/
      virtual int recv( char *buffer, const int &size, int waitMs = 0 );
      
      /************************************************************************
       * 
       ***********************************************************************/
      inline std::string getErrorMessage() const { return errMsg; }
      
      /************************************************************************
       * 
       ***********************************************************************/
      inline std::string getIpAddress() const { return ipAddress; }
      
      /************************************************************************
       * 
       ***********************************************************************/
      inline int getPort() const { return port; }
      
      /************************************************************************
       * 
       ***********************************************************************/
      inline int getSocket() const { return sock; }
      
   protected:
      
      std::string ipAddress;
      std::string errMsg;
      int port;
      int sock;
      bool blocking; 
      int recvFlag;
      
      #ifdef _WIN32
      // TODO: implement
      #else
      struct pollfd pollIn;
      #endif
      
      /************************************************************************
       * 
       ***********************************************************************/
      virtual bool connectSocket() = 0;
};

#endif
