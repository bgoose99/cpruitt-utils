
#ifndef __ISerializable__
#define __ISerializable__

// system includes
#include <istream>
#include <ostream>

/******************************************************************************
 * Simple serialization interface.
 *****************************************************************************/
template <typename T>
class ISerializable
{
public:

   /***************************************************************************
    *
    **************************************************************************/
   virtual void toBytes( char *buf ) const = 0;

   /***************************************************************************
    *
    **************************************************************************/
   virtual T &fromBytes( const char *buf ) = 0;

   /***************************************************************************
    *
    **************************************************************************/
   virtual int binarySize() const = 0;

   /***************************************************************************
    *
    **************************************************************************/
   virtual void toBinaryStream( std::ostream &out ) const = 0;

   /***************************************************************************
    *
    **************************************************************************/
   virtual T &fromBinaryStream( std::istream &in ) = 0;
};

#endif
